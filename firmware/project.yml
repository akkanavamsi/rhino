---

# Notes:
# Sample project C code is not presently written to produce a release artifact.
# As such, release build options are disabled.
# This sample, therefore, only demonstrates running a collection of unit tests.

:project:
  :use_exceptions: FALSE
  :use_test_preprocessor: TRUE
  :use_auxiliary_dependencies: TRUE
  :build_root: build
  :release_build: TRUE

:release_build:
 :output: release_build
 :use_assembly: TRUE

:environment:
  - :mcu:  32MZ2048EFM144
  - :freq: 80000000UL

:extension:
  :executable: .elf
  :assembly: .S

:paths:
  :test:
    - +:test/**
    - -:test/support
    - -:test/simulation
  :source:
    - +:src/**
  :support:
    - test/support
  :include:
    - "#{ENV['COMPILER_ROOT']}pic32mx/include/"
:files:
  :source:
    - -:src/gps.c
  :support:
    - test/support/UnityHelper.c
:defines:
  # in order to add common defines:
  #  1) remove the trailing [] from the :common: section
  #  2) add entries to the :common: section (e.g. :test: has TEST defined)
  :commmon: &common_defines
    - __PIC32MZ__
    - __PIC32MZ
    - __32MZ2048EFM144__
    - __LANGUAGE_C__
    - __MIPSEL__
  :test:
    - *common_defines
    - UNITY_INT_WIDTH=32
    - CMOCK_MEM_INDEX_TYPE=uint32_t
    - CMOCK_MEM_PTR_AS_INT=uint32_t
    - CMOCK_MEM_SIZE=2056
    - TEST
  :test_preprocess:
    - *common_defines
    - TEST
  :release:
    - *common_defines

:cmock:
  :mock_prefix: mock_
  :when_no_prototypes: :warn
  :enforce_strict_ordering: TRUE
  :plugins:
    - :ignore
    - :callback
  :treat_as:
    uint8:    HEX8
    uint16:   HEX16
    uint32:   UINT32
    int8:     INT8
    bool:     UINT8
:unity: #itty bitty processor & toolchain with limited test execution options
  :defines:
    - UNITY_INCLUDE_DOUBLE
    - UNITY_INCLUDE_CONFIG_H
:tools:
  :test_compiler:
    :executable: "#{ENV['COMPILER_ROOT']}bin/xc32-gcc"
    :arguments:
      - -mprocessor=#{ENV['MCU']}
      - -g -c
      - ${1}
      - -o ${2}
      - -D$: COLLECTION_DEFINES_TEST_AND_VENDOR
      - -I"$": COLLECTION_PATHS_TEST_SUPPORT_SOURCE_INCLUDE_VENDOR
      - -Wall
      #- -Werror  # We can't keep this on during test becuase of a CMock pointer issue
  :test_assembler:
    :executable: "#{ENV['COMPILER_ROOT']}bin/xc32-gcc"
    :arguments:
      - -mprocessor=#{ENV['MCU']}
      - -g -c
      - "${1}"
      - -o "${2}"
      - -I"$": COLLECTION_PATHS_SOURCE_INCLUDE_VENDOR
      - -I"$": COLLECTION_PATHS_RELEASE_TOOLCHAIN_INCLUDE
      - -D$: COLLECTION_DEFINES_RELEASE_AND_VENDOR
      - -Wall
      #- -Werror
  :test_linker:
    :executable: "#{ENV['COMPILER_ROOT']}bin/xc32-gcc"
    :arguments:
      - -mprocessor=#{ENV['MCU']}
      - ${1}
      - -o "./build/test/test_build.elf"
      - -g
      - -Wl,-Tp#{ENV['MCU']}.ld,-Map=${3},--defsym=_min_heap_size=4000,--gc-sections,--no-code-in-dinit,--no-dinit-in-serial-mem
  :test_fixture:
    :executable: ruby
    :name: "Microchip simulator test fixture"
    :stderr_redirect: :unix # win inform Ceedling what model of $stderr capture to use
    :arguments:
      - test/simulation/sim_test_fixture.rb

  :release_compiler:
    :executable: "#{ENV['COMPILER_ROOT']}bin/xc32-gcc"
    :arguments:
      - -mprocessor=#{ENV['MCU']}
      - -x c
      - -g -c
      - "${1}"
      - -o "${2}"
      - -I"$": COLLECTION_PATHS_SOURCE_INCLUDE_VENDOR
      - -I"$": COLLECTION_PATHS_RELEASE_TOOLCHAIN_INCLUDE
      - -D$: COLLECTION_DEFINES_RELEASE_AND_VENDOR
      - -Wall
      #- -Werror
  :release_linker:
    :executable: "#{ENV['COMPILER_ROOT']}bin/xc32-gcc"
    :arguments:
      - -mprocessor=#{ENV['MCU']}
      - ${1}
      - -o ${2}
      - -Wl,-Map=${3},--defsym=_min_heap_size=4000
  :release_assembler:
    :executable: "#{ENV['COMPILER_ROOT']}bin/xc32-gcc"
    :arguments:
      - -mprocessor=#{ENV['MCU']}
      - -c
      - "${1}"
      - -o "${2}"
      #- -Werror
:plugins:
  :load_paths:
    - "#{Ceedling.load_path}"
  :enabled:
    - junit_tests_report
    - stdout_gtestlike_tests_report
    #- stdout_pretty_tests_report
    - module_generator
...
